import React, { useRef } from "react"
import { useFrame } from "@react-three/fiber"
import { useGLTF } from "@react-three/drei"
import * as THREE from 'three'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF("/well.gltf")

  useFrame((state, delta) => group.current.rotation.y += 0.005)
  
  console.log(nodes)
  console.log(materials)
  return (
    <group 
      castShadow 
      receiveShadow 
      ref={group} 
      {...props} 
      position={[0,0,0]}
      dispose={null} 
      scale={0.4}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube.position}
        rotation={nodes.Cube.rotation}
        scale={nodes.Cube.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={materials["Material.006"]}
        position={nodes.Cube001.position}
        rotation={nodes.Cube001.rotation}
        scale={nodes.Cube001.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={materials["Material.006"]}
        position={nodes.Cube003.position}
        rotation={nodes.Cube003.rotation}
        scale={nodes.Cube003.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={materials["Material.006"]}
        position={nodes.Cube004.position}
        rotation={nodes.Cube004.rotation}
        scale={nodes.Cube004.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005.geometry}
        material={materials["Material.006"]}
        position={nodes.Cube005.position}
        rotation={nodes.Cube005.rotation}
        scale={nodes.Cube005.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube006.position}
        rotation={nodes.Cube006.rotation}
        scale={nodes.Cube006.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube007.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube007.position}
        rotation={nodes.Cube007.rotation}
        scale={nodes.Cube007.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube008.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube008.position}
        rotation={nodes.Cube008.rotation}
        scale={nodes.Cube008.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube009.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube009.position}
        rotation={nodes.Cube009.rotation}
        scale={nodes.Cube009.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube010.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube010.position}
        rotation={nodes.Cube010.rotation}
        scale={nodes.Cube010.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube011.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube011.position}
        rotation={nodes.Cube011.rotation}
        scale={nodes.Cube011.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube012.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube012.position}
        rotation={nodes.Cube012.rotation}
        scale={nodes.Cube012.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube013.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube013.position}
        rotation={nodes.Cube013.rotation}
        scale={nodes.Cube013.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube014.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube014.position}
        rotation={nodes.Cube014.rotation}
        scale={nodes.Cube014.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube015.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube015.position}
        rotation={nodes.Cube015.rotation}
        scale={nodes.Cube015.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube016.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube016.position}
        rotation={nodes.Cube016.rotation}
        scale={nodes.Cube016.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube017.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube017.position}
        rotation={nodes.Cube017.rotation}
        scale={nodes.Cube017.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube018.geometry}
        material={materials["Material.002"]}
        position={nodes.Cube018.position}
        rotation={nodes.Cube018.rotation}
        scale={nodes.Cube018.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={materials["Material.002"]}
        position={nodes.Cylinder.position}
        rotation={nodes.Cylinder.rotation}
        scale={nodes.Cylinder.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={materials["Material.002"]}
        position={nodes.Cylinder001.position}
        rotation={nodes.Cylinder001.rotation}
        scale={nodes.Cylinder001.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder002.geometry}
        material={materials["Material.007"]}
        position={nodes.Cylinder002.position}
        rotation={nodes.Cylinder002.rotation}
        scale={nodes.Cylinder002.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003.geometry}
        material={materials["Material.007"]}
        position={nodes.Cylinder003.position}
        rotation={nodes.Cylinder003.rotation}
        scale={nodes.Cylinder003.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder004.geometry}
        material={materials["Material.005"]}
        position={nodes.Cylinder004.position}
        rotation={nodes.Cylinder004.rotation}
        scale={nodes.Cylinder004.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere.position}
        rotation={nodes.Icosphere.rotation}
        scale={nodes.Icosphere.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere001.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere001.position}
        rotation={nodes.Icosphere001.rotation}
        scale={nodes.Icosphere001.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere002.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere002.position}
        rotation={nodes.Icosphere002.rotation}
        scale={nodes.Icosphere002.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere003.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere003.position}
        rotation={nodes.Icosphere003.rotation}
        scale={nodes.Icosphere003.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere004.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere004.position}
        rotation={nodes.Icosphere004.rotation}
        scale={nodes.Icosphere004.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere005.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere005.position}
        rotation={nodes.Icosphere005.rotation}
        scale={nodes.Icosphere005.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere006.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere006.position}
        rotation={nodes.Icosphere006.rotation}
        scale={nodes.Icosphere006.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere007.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere007.position}
        rotation={nodes.Icosphere007.rotation}
        scale={nodes.Icosphere007.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere008.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere008.position}
        rotation={nodes.Icosphere008.rotation}
        scale={nodes.Icosphere008.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere009.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere009.position}
        rotation={nodes.Icosphere009.rotation}
        scale={nodes.Icosphere009.scale}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere010.geometry}
        material={materials["Material.006"]}
        position={nodes.Icosphere010.position}
        rotation={nodes.Icosphere010.rotation}
        scale={nodes.Icosphere010.scale}
      />
      <group
        castShadow
        receiveShadow
        position={nodes.Lattice001.position}
        rotation={nodes.Lattice001.rotation}
        scale={ new THREE.Vector3( 
          nodes.Lattice001.scale.x, 
          nodes.Lattice001.scale.y,
          nodes.Lattice001.scale.z * 0.3
        )}
      >
        <group
          castShadow
          receiveShadow
          position={nodes.Plane.position}
          rotation={nodes.Plane.rotation}
          scale={nodes.Plane.scale}
        >
          <mesh
            castShadow
            receiveShadow

            geometry={nodes.Plane_1.geometry}
            material={materials["Material.004"]}
            position={nodes.Plane_1.position}
            rotation={nodes.Plane_1.rotation}
            scale={nodes.Plane_1.scale}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane_2.geometry}
            material={materials["Material.003"]}
            position={nodes.Plane_2.position}
            rotation={nodes.Plane_2.rotation}
            scale={nodes.Plane_2.scale}
          />
        </group>
      </group>
      <group
        castShadow
        receiveShadow
        position={nodes.Lattice.position}
        rotation={nodes.Lattice.rotation}
        scale={new THREE.Vector3( 
          nodes.Lattice.scale.x,
          nodes.Lattice.scale.y,
          nodes.Lattice.scale.z * 0.3
        )}
      >
        <group
          castShadow
          receiveShadow
          position={nodes.Plane001.position}
          rotation={nodes.Plane001.rotation}
          scale={nodes.Plane001.scale}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane001_1.geometry}
            material={materials["Material.004"]}
            position={nodes.Plane001_1.position}
            rotation={nodes.Plane001_1.rotation}
            scale={nodes.Plane001_1.scale}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane001_2.geometry}
            material={materials["Material.003"]}
            position={nodes.Plane001_2.position}
            rotation={nodes.Plane001_2.rotation}
            scale={nodes.Plane001_2.scale}
          />
        </group>
      </group>
    </group>    
  )
}

useGLTF.preload("/well.gltf")
